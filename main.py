import telebot
from telebot import types
import time

bot = telebot.TeleBot('5803732373:AAFZBkx6X0eVwBl43ZOtkkFJNenMFuZqjn4', parse_mode='html')

PHOTO = {'Формулы сокращенного умножения': '301', 'Арифметическая прогрессия': '302',
         'Геометрическая прогрессия': '303',
         'Вероятность': '304', 'Вероятность независмых событий': '305',
         'Вероятность зависимых событий': '306', 'Вероятность несовместных событий': '307',
         'Вероятность совместных событий': '308', 'Свойства степеней': '311', 'Свойства логарифмов': '312',
         'Табличные значения': '313', 'Формулы приведения': '314', 'Основные тождества': '315',
         'Формулы суммы и разности углов': '316', 'Формулы двойного и тройного углов': '317',
         'Формулы понижения степени': '318', 'Формулы произведения функций': '319',
         'Преобразование суммы/разности в произведение': '320',
         'Выражение синуса и косинуса через тангенс половинного угла': '321',
         'Обратные тригонометрические функции': '322',
         'Таблица производных': '323', 'Основные правила дифференцирования': '324', 'Уравнение касательной': '325',
         'Первообразные': '326', 'Таблица первообразных': '327',
         'Углы в треугольнике': '1', 'Признаки равенства треугольников': '2', 'Равнобедренный треугольник': '3',
         'Центр описанной окружности треугольника': '4', 'Свойства и признаки параллельных прямых': '5',
         'Теорема Фалеса': '6', 'Признаки подобия треугольников': '7', 'Средняя линия треугольника': '8',
         'Медиана треугольника': ('9.1', '9.2', '9.3', '9.4'), 'Медиана прямоугольного треуогльника': '10',
         'Признаки равенства прямоугольных треугольников': '15.5', 'Теорема Пифагора': '11',
         'Высота в прямоугольном треугольнике': '12', 'Вписанная окружность в прямоугольном треугольнике': '13',
         'Прямоугольный треугольник с острым углом в 30 градусов': '14',
         'Тригонометрия в прямоугольном треугольнике': '15', 'Четырехугольники': '16',
         'Определение ромба. Свойства и признаки': '19', 'Определение прямоугольника. Свойства и признаки': '20',
         'Определение квадрата. Свойства и признаки': '21', 'Свойства многоугольников': '23',
         'Определение параллелограмма. Свойства и признаки': '17', 'Биссектриса параллелограмма': '18',
         'Правильный треугольник': '24', 'Правильный шестиугольник': '25', 'Определение трапеции': '22',
         'Свойства трапеции': ('87', '88', '89', '90', '91'),
         'Средняя линия трапеции': '92', 'Равнобедренная трапеция': '93', 'Замечательное свойство трапеции': '94',
         'Дополнительные построения в трапеции': '95', 'Нетривиальный факт про трапецию': ('96', '97'),
         'Теоремы о площадях треугольников': ('26', '27', '28', '29', '30'),
         'Форулы площади треугольника': ('31', '32', '33', '34', '35'),
         'Площадь выпуклого четырехугольника': '36', 'Площадь параллелограма': ('37', '38', '39'),
         'Площадь ромба': ('40', '41', '42'),
         'Площадь прямоугольника': ('43', '44'), 'Площадь квадрата': ('45', '46'), 'Площадь трапеции': '47',
         'Формула Брахмагупты': '48',
         'Площадь описанного четырехугольника': '49', 'Площадь описанного и вписанного четырехугольника': '50',
         'Основные факты про окружность': [str(i) for i in range(51, 64)], 'Признаки вписанности': '54',
         'Подобные треугольники в окружностях': '55',
         'Элементарные свойства ортоцентра': ('66', '67', '68'),
         'Леммы об отражении ортоцентра': ('69', '70', '71', '72'),
         'Картинка для запоминания двух лемм': '73', 'Топовые свойства ортоцентра': ('74', '75', '76'),
         'Основные свойства биссектрисы': ('77', '78', '79', '80', '81', '82'),
         'Вписанная и вневписанные окружности треугольника': ('83', '84', '85'), 'Описанный четырехугольник': '86',
         'Длина и координаты середины отрезка': '98', 'Правила треугольника и параллелограмма': '99',
         'Координаты и модуль вектора': '100', 'Скалярное произведение векторов': '101', 'Теорема косинусов': '106',
         'Теорема синусов': '107', 'Теорема Менелая': '102', 'Теорема Чевы': '103', 'Теорема Ван-Обеля': '104',
         'Теорема Стюарта': '105', 'Теорема Птолемея': '108', 'Аксиомы стереометрии': '201',
         'Способы задать плоскость': '202',
         'Параллельность прямых': '203', 'Взаимное расположение прямой и плоскости': '204',
         'Параллельные плоскости': ('205', '206'),
         'Скрещивающиеся прямые': '207', 'Перпендикулярность прямой и плоскости': '208',
         'Перпендикулярность двух плоскостей': '209', 'Теорема о трех перпендикулярах (ТТП)': '210',
         'Расстояние между параллельными прямыми/плоскостями': '211', 'Расстояние от точки до плоскости': '212',
         'Расстояние между скрещивающимися прямыми': ('213', '214'), 'Угол между скрещивающимися прямыми': '215',
         'Угол между прямой и плоскостью': '216', 'Угол между плоскостями': '217',
         'Связь между площадью фигуры и площадью ее проекции': '218', 'Алгоритм построения сечений': '219',
         'Сечение куба': '220',
         'Сечение правильной четырехугольной пирамиды': '221', 'Объемы и площади поверхностей фигур': '222',
         'Механическое движение. Относительность механического движения. Система отсчёта': (
             401, 403, 402, 396, 397, 398),
         'Материальная точка. Её радиус-вектор, траектория, перемещение, путь': (403, 404, 405, 406, 407),
         'Скорость материальной точки. Перемещение и путь на графике u(t)': (408, 409),
         'Ускорение материальной точки': (410, 411),
         'Равномерное прямолинейное движение': 412,
         'Равноускоренное прямолинейное движение. Путь при равноускоренном движении': 413,
         'Свободное падение. Движение тела, брошенного под углом к горизонту': (414, 415),
         'Движение по окружности. Угловая и линейная скорость. Центростремительное ускорение': (
             416, 417, 418, 419, 420, 421),
         'Инерциальные системы отсчёта. Первый закон Ньютона. Принцип относительности Галилея': (422, 423),
         'Масса тела. Плотность вещества': 1, 'Сила. Принцип суперпозиции сил': 1, 'Второй закон Ньютона': 424,
         'Третий закон Ньютона': 425, 'Закон всемирного тяготения. Сила тяжести. Центр тяжести тела': (426, 427, 428),
         'Движение небесных тел и их искусственных спутников. Первая космическая скорость': (428, 429, 438, 439),
         'Вторая космическая скорость': 430, 'Сила упругости. Закон Гука': (431, 432),
         'Сила трения. Сухое трение. Сила трения скольжения, трения покояю. Коэффициент трения': (
             433, 434, 435, 436, 437),
         'Давление': 440, 'Момент силы': (441, 442), 'Центр масс': 1, 'Условия равновесия твёрдого тела в ИСО': 443,
         'Закон Паскаля': 444, 'Давление в жидкости': (445, 446, 447, 448),
         'Закон Архимеда. Сила Архимеда. Условие плавания тел.': (449, 450, 451, 452),
         'Импульс материальной точки': 453, 'Импульс системы тел': (455, 456), 'Закон сохранения импульса (ЗСИ)': 457,
         'Работа силы': (458, 461), 'Мощность силы': (459, 460), 'Кинетическая энергия': 462,
         'Потенциальная энергия': (463, 464, 465),
         'Закон сохранения механической энергии (ЗСЭ)': 466,
         'Гармонические колебания. Амплитуда и фаза колебаний': (467, 468, 469, 470),
         'Период и частота колебаний. Период малых колебаний': (471, 472, 473, 474, 475),
         'Вынужденные колебания. Резонанс. Резонансная кривая': 1,
         'Поперечные и продольные волны. Скорость распространения и длина волны': 1,
         'Интерференция и дифракция волн': 1, 'Звук. Скорость звука': 1,
         'Модели строения вещества. Количество вещества': (491, 492),  # нету моделей
         'Тепловое движение атомов и молекул вещества': 1,
         'Взаимодействие частиц вещества': 479, 'Диффузия. Броуновское движение': 1,
         'Модель идеального газа в МКТ': 480,
         'Основное уравнение МКТ': (481, 482, 483, 484, 485, 486, 476), 'Абсолютная температура': 490,
         'Связь температуры газа со средней кинетической энергией молекул': (487, 488),
         'Уравнение p = nkT': 489,
         'Модель идеального газа в термодинамике. Уравнение Менделеева–Клапейрона': (480, 493),
         'Внутренняя энергия идеального одноатомного газа': (511, 512),
         'Закон Дальтона для давления смеси разреженных газов': 1,
         'Изопроцессы. Объединённый газовый закон': 494,
         'Графическое представление изопроцессов на pV-, pT- и VT- диаграммах': 495,
         'Насыщенные и ненасыщенные пары': (496, 497, 498, 499, 500, 501), 'Влажность воздуха': 502,
         'Испарение и конденсация, кипение жидкости (парообразование)': (504, 505, 503),
         'Плавление и кристаллизация': (504, 505, 503),
         'Преобразование энергии в фазовых переходах': 1, 'Тепловое равновесие и температура': 509,
         'Внутренняя энергия': (510, 511, 512, 513), 'Теплопередача: конвекция, теплопроводность, излучение': 1,
         'Количество теплоты. Теплоемность. Удельная теплоёмкость вещества': 506,
         'Удельная теплота парообразования/плавления/сгорания топлива': (507, 508, 503),
         'Уравнение теплового баланса': 509,
         'Работа в термодинамике (работа газа)': (514, 515, 516),
         'Первый закон термодинамики. Адиабата': (517, 518, 519, 520),
         'Второй закон термодинамики. Необратимые процессы': 1, 'Тепловые машины. КПД': (521, 522),
         'Цикл Карно (максимальное значение КПД)': 523,
         # еще есть теплоемкость газа
         'Электризация. Электрический заряд. Закон сохранения электрического заряда': (533, 534),
         'Взаимодействие зарядов. Закон Кулона (Кулоновская сила)': 535, 'Электрическое поле': 536,
         'Напряжённость электрического поля. Поле точечного заряда. Линии напряжённости': (537, 538, 539),
         'Потенциал электростатического поля. Потенциальная энергия заряда в электростатическом поле': (
             541, 542, 543, 544, 545),
         'Принцип суперпозиции электрических полей': 540,
         'Проводники в электростатическом поле. Условие равновесия зарядов': (546, 547),
         'Диэлектрики в электростатическом поле. Диэлектрическая проницаемость вещества ε': (546, 547),
         'Конденсатор. Электроёмкость конденсатора. Плоский конденсатор': (592, 593, 594, 595, 596, 597),
         'Параллельное соединение конденсаторов': 599,
         'Последовательное соединение конденсаторов': 598, 'Энергия заряженного конденсатора': (600, 601, 602),
         'Сила тока': 549,
         'Условия существования электрического тока. Напряжение и ЭДС': (548, 550),
         'Закон Ома для участка цепи': 551, 'Электрическое сопротивление': (552, 553),
         'Источники тока. ЭДС источника тока. Внутреннее сопротивление': (554, 555),
         'Закон Ома для полной (замкнутой) электрической цепи': (556, 557),
         'Параллельное и последовательное соединение проводников': (558, 559),
         'Работа электрического тока. Закон Джоуля – Ленца': (560, 562),
         'Мощность электрического тока. Тепловая мощность. Мощность источника тока': 561,
         'Механизмы проводимости в различных веществах. Полупроводники': 1, 'Механическое взаимодействие магнитов': 1,
         'Магнитное поле. Вектор магнитной индукции. Принцип суперпозиции магнитных полей': (569, 570, 571, 576, 563),
         'Линии индукции магнитного поля': 572, 'Опыт Эрстеда. Магнитное поле проводника с током': (573, 574, 575),
         'Сила Ампера': (577, 578), 'Сила Лоренца. Движение заряженной частицы в однородном магнитном поле': (579, 580),
         'Поток вектора магнитной индукции': (563, 564, 565, 566),
         'Явление электромагнитной индукции. ЭДС индукции': 567,
         'Закон электромагнитной индукции Фарадея': 568, 'ЭДС индукции в прямом движущемся проводнике': 1,
         'Правило Ленца': 1, 'Индуктивность. Самоиндукция. ЭДС самоиндукции': (618, 619),
         'Энергия магнитного поля катушки с током': 619,
         'Колебательный контур. Свободные электромагнитные колебания': (608, 609, 610, 611, 612, 613),
         'Формула Томсона (период колебаний в LC цепи). Связь амплитуды заряда конденсатора с амплитудой силы тока': 612,
         'Закон сохранения энергии в идеальном колебательном контуре': (612, 613),
         'Вынужденные электромагнитные колебания. Резонанс': 1, 'Переменный ток': 1,
         'Свойства электромагнитных волн': 1, 'Шкала электромагнитных волн. Электромагнитные волны в технике и быту': 1,
         'Прямолинейное распространение света в однородной среде': 638,
         'Законы отражения света': 639, 'Построение изображений в плоском зеркале': 631,
         'Законы преломления света. Показатель преломления': (640, 641, 642, 643, 644, 645, 670),
         'Полное внутреннее отражение': (646, 647),
         'Собирающие и рассеивающие линзы. Фокусное расстояние и оптическая сила тонкой линзы': (
             620, 621, 622, 623, 624, 634),
         'Формула тонкой линзы. Линейное увеличение': (632, 634),
         'Построения в линзах': (623, 624, 625, 626, 627, 628, 629, 630),
         'Фотоаппарат как оптический прибор. Глаз как оптическая система': 1,
         'Интерференция света. Когерентные источники. Максимумы и минимумы': (648, 649, 650, 651),
         'Дифракция света. Дифракционная решётка. Главные максимумы': (652, 653, 654, 655), 'Дисперсия света': 1,
         'Гипотеза М. Планка о квантах. Формула Планка': 668, 'Фотоны. Энергия фотона. Импульс фотона': (668, 669),
         'Фотоэффект. Опыты А.Г. Столетова. Законы фотоэффекта': 1,
         'Уравнение Эйнштейна для фотоэффекта': 1,
         'Волновые свойства частиц. Волны де Бройля. Корпускулярно-волновой дуализм': (656, 667, 661, 662),
         'Дифракция электронов на кристаллах': 1, 'Давление света': (663, 664, 665, 666),
         'Планетарная модель атома': 683,
         'Постулаты Бора. Переход атома с одного уровня энергии на другой': (684, 685, 688, 689, 690,),
         'Линейчатые спектры. Спектр уровней энергии атома водорода': (690, 688, 689, 692), 'Лазер': 1,
         'Нуклонная модель ядра. Заряд ядра. Массовое число. Изотопы': (693, 694, 695, 696),
         'Энергия связи нуклонов в ядре. Ядерные силы': 699,
         'Дефект массы ядра': 698, 'Радиоактивность. Альфа и Бетта распады. Гамма излучение': (700, 701, 702, 703),
         'Закон радиоактивного распада': 704, 'Ядерные реакции. Деление и синтез ядер': (705, 706, 707)}

MATH = {'Алгебра': {'Формулы сокращенного умножения': 0,
                    'Прогрессии': ['Арифметическая прогрессия', 'Геометрическая прогрессия'],
                    'Теория вероятностей': ['Вероятность', 'Вероятность независмых событий',
                                            'Вероятность зависимых событий',
                                            'Вероятность несовместных событий', 'Вероятность совместных событий'],
                    'Свойства степеней': 0,
                    'Свойства логарифмов': 0,
                    'Тригониметрия': ['Табличные значения', 'Формулы приведения', 'Основные тождества',
                                      'Формулы суммы и разности углов',
                                      'Формулы двойного и тройного углов', 'Формулы понижения степени',
                                      'Формулы произведения функций',
                                      'Преобразование суммы/разности в произведение',
                                      'Выражение синуса и косинуса через тангенс половинного угла',
                                      'Обратные тригонометрические функции'],
                    'Производные и первообразные': ['Таблица производных', 'Основные правила дифференцирования',
                                                    'Уравнение касательной', 'Первообразные', 'Таблица первообразных']},
        'Планиметрия': {'Треугольники и углы. Параллельные прямые': ['Углы в треугольнике',
                                                                     'Признаки равенства треугольников',
                                                                     'Равнобедренный треугольник',
                                                                     'Центр описанной окружности треугольника',
                                                                     'Свойства и признаки параллельных прямых',
                                                                     'Теорема Фалеса',
                                                                     'Признаки подобия треугольников'],
                        'Средние линии и медианы треугольника': ['Средняя линия треугольника',
                                                                 'Медиана треугольника'],
                        'Прямоугольный треугольник': ['Медиана прямоугольного треуогльника',
                                                      'Признаки равенства прямоугольных треугольников',
                                                      'Теорема Пифагора',
                                                      'Высота в прямоугольном треугольнике',
                                                      'Вписанная окружность в прямоугольном треугольнике',
                                                      'Прямоугольный треугольник с острым углом в 30 градусов',
                                                      'Тригонометрия в прямоугольном треугольнике'],
                        'Многоугольники': ['Четырехугольники', 'Определение параллелограмма. Свойства и признаки',
                                           'Определение ромба. Свойства и признаки',
                                           'Определение прямоугольника. Свойства и признаки',
                                           'Определение квадрата. Свойства и признаки',
                                           'Свойства многоугольников'],
                        'Параллелограмм': ['Определение параллелограмма. Свойства и признаки',
                                           'Биссектриса параллелограмма',
                                           'Определение ромба. Свойства и признаки',
                                           'Определение прямоугольника. Свойства и признаки',
                                           'Определение квадрата. Свойства и признаки'],
                        'Правильные многоугольники': ['Правильный треугольник',
                                                      'Определение квадрата. Свойства и признаки',
                                                      'Правильный шестиугольник'],
                        'Трапеция': ['Определение трапеции', 'Свойства трапеции',
                                     'Средняя линия трапеции', 'Равнобедренная трапеция',
                                     'Замечательное свойство трапеции',
                                     'Дополнительные построения в трапеции',
                                     'Нетривиальный факт про трапецию'],
                        'Все о площадях': ['Теоремы о площадях треугольников',
                                           'Форулы площади треугольника',
                                           'Площадь выпуклого четырехугольника',
                                           'Площадь параллелограма', 'Площадь ромба',
                                           'Площадь прямоугольника', 'Площадь квадрата',
                                           'Площадь трапеции', 'Формула Брахмагупты',
                                           'Площадь описанного четырехугольника',
                                           'Площадь описанного и вписанного четырехугольника'],
                        'Окружность и вписанные четырехугольники': ['Основные факты про окружность',
                                                                    'Признаки вписанности',
                                                                    'Подобные треугольники в окружностях'],
                        'Высота треугольника и ортоцентр': ['Элементарные свойства ортоцентра',
                                                            'Леммы об отражении ортоцентра',
                                                            'Картинка для запоминания двух лемм',
                                                            'Топовые свойства ортоцентра'],
                        'Биссектрисы и инцентр': ['Основные свойства биссектрисы',
                                                  'Вписанная и вневписанные окружности треугольника',
                                                  'Описанный четырехугольник'],
                        'Метод координат': ['Длина и координаты середины отрезка',
                                            'Правила треугольника и параллелограмма',
                                            'Координаты и модуль вектора',
                                            'Скалярное произведение векторов'],
                        'Счетные теоремы планиметрии': ['Теорема косинусов', 'Теорема синусов',
                                                        'Теорема Менелая', 'Теорема Чевы',
                                                        'Теорема Ван-Обеля', 'Теорема Стюарта',
                                                        'Теорема Птолемея']},
        'Стереометрия': {'Важнейшие аксиомы стереометрии. Способы задать плоскость': ['Аксиомы стереометрии',
                                                                                      'Способы задать плоскость'],
                         'Параллельность. Взаимное расположение объектов в пространстве': ['Параллельность прямых',
                                                                                           'Взаимное расположение прямой и плоскости',
                                                                                           'Параллельные плоскости',
                                                                                           'Скрещивающиеся прямые'],
                         'Перпендикулярность': ['Перпендикулярность прямой и плоскости',
                                                'Перпендикулярность двух плоскостей',
                                                'Теорема о трех перпендикулярах (ТТП)'],
                         'Расстояние между объектами': ['Расстояние между параллельными прямыми/плоскостями',
                                                        'Расстояние от точки до плоскости',
                                                        'Расстояние между скрещивающимися прямыми'],
                         'Углы между объектами': ['Угол между скрещивающимися прямыми',
                                                  'Угол между прямой и плоскостью',
                                                  'Угол между плоскостями',
                                                  'Связь между площадью фигуры и площадью ее проекции'],
                         'Сечения': ['Алгоритм построения сечений', 'Сечение куба',
                                     'Сечение правильной четырехугольной пирамиды'],
                         'Объемы и площади поверхностей фигур': 0}}


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    math = types.KeyboardButton('Математика')
    phys = types.KeyboardButton('Физика')
    markup.add(math, phys)
    bot.send_message(message.chat.id, f'Привет, <b>{message.from_user.first_name} {message.from_user.last_name}</b>')
    bot.send_message(message.chat.id,
                     "Я могу подсказать формулы, теоремы и определения из математики и физики (Модуль физика на "
                     "данный момент составлен на основе кодификатора ЕГЭ по физике, дальше будет расширяться).\n\nДля "
                     "начала выбери, какой предмет тебя интересует, либо напиши тему, которая тебя интересует.",
                     reply_markup=markup)


@bot.message_handler(commands=['help'])
def help(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    math = types.KeyboardButton('Математика')
    phys = types.KeyboardButton('Физика')
    markup.add(math, phys)
    bot.send_message(message.chat.id,
                     "Я могу подсказать формулы, теоремы и определения из математики и физики (Модуль физика на "
                     "данный момент составлен на основе кодификатора ЕГЭ по физике, дальше будет расширяться).\n\nДля "
                     "начала выбери, какой предмет тебя интересует, либо напиши тему, которая тебя интересует.",
                     reply_markup=markup)


@bot.message_handler()
def some_answer(message):
    global MATH
    global PHOTO
    # print(message)
    match message.text:
        case 'Математика' | '<–– Назад к разделам математики':  # Выбор раздела математики
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(*[types.KeyboardButton(s) for s in MATH.keys()],
                       types.KeyboardButton('<–– Назад к предметам'))
            bot.send_message(message.chat.id, 'Выбери раздел', reply_markup=markup)

        case 'Физика' | '<–– Назад к разделам':  # Выбор раздела физики
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(types.KeyboardButton('Механика'),
                       types.KeyboardButton('Молекулярная физика и термодинамика'),
                       types.KeyboardButton('Электродинамика'),
                       types.KeyboardButton('Основы специальной теории относительности'),
                       types.KeyboardButton('Квантовая физика'),
                       types.KeyboardButton('<–– Назад к предметам'))
            bot.send_message(message.chat.id, 'Выбери раздел', reply_markup=markup)

        case '<–– Назад к предметам':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            math = types.KeyboardButton('Математика')
            phys = types.KeyboardButton('Физика')
            markup.add(math, phys)
            bot.send_message(message.chat.id, 'Выбери предмет', reply_markup=markup)

        # Выбор темы в разделе математики
        case 'Алгебра' | '<–– Назад к темам алгебры':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Алгебра'].keys()],
                       types.KeyboardButton('<–– Назад к разделам математики'))
            bot.send_message(message.chat.id, 'Выбери тему', reply_markup=markup)
        case 'Планиметрия' | '<–– Назад к темам планиметрии':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия'].keys()],
                       types.KeyboardButton('<–– Назад к разделам математики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Стереометрия' | '<–– Назад к темам стереометрии':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Стереометрия'].keys()][:2], row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Стереометрия'].keys()][2:],
                       types.KeyboardButton('<–– Назад к разделам математики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Алгебра"
        # case 'Формулы сокращенного умножения':
        #     Отослать пикчу
        case 'Прогрессии':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Алгебра']['Прогрессии']],
                       types.KeyboardButton('<–– Назад к темам алгебры'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Теория вероятностей':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Алгебра']['Теория вероятностей']],
                       types.KeyboardButton('<–– Назад к темам алгебры'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        # case 'Свойства степеней':
        # case 'Свойства логарифмов':
        case 'Тригониметрия':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Алгебра']['Тригониметрия'][:5]])
            markup.add(*[types.KeyboardButton(s) for s in MATH['Алгебра']['Тригониметрия'][5:]],
                       types.KeyboardButton('<–– Назад к темам алгебры'), row_width=1)
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Производные и первообразные':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Алгебра']['Производные и первообразные']],
                       types.KeyboardButton('<–– Назад к темам алгебры'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Планиметрия"
        case 'Треугольники и углы. Параллельные прямые':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(
                *[types.KeyboardButton(s) for s in MATH['Планиметрия']['Треугольники и углы. Параллельные прямые']],
                types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Средние линии и медианы треугольника':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Средние линии и медианы треугольника']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Прямоугольный треугольник':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Прямоугольный треугольник']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Многоугольники':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Многоугольники']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Параллелограмм':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Параллелограмм']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Правильные многоугольники':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Правильные многоугольники']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Трапеция':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Трапеция']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Все о площадях':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Все о площадях']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Окружность и вписанные четырехугольники':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                *[types.KeyboardButton(s) for s in MATH['Планиметрия']['Окружность и вписанные четырехугольники']],
                types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Высота треугольника и ортоцентр':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Высота треугольника и ортоцентр']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Биссектрисы и инцентр':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Биссектрисы и инцентр']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Метод координат':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Метод координат']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Счетные теоремы планиметрии':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Планиметрия']['Счетные теоремы планиметрии']],
                       types.KeyboardButton('<–– Назад к темам планиметрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Стереометрия"
        case 'Важнейшие аксиомы стереометрии. Способы задать плоскость':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in
                         MATH['Стереометрия']['Важнейшие аксиомы стереометрии. Способы задать плоскость']],
                       types.KeyboardButton('<–– Назад к темам стереометрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Параллельность. Взаимное расположение объектов в пространстве':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in
                         MATH['Стереометрия']['Параллельность. Взаимное расположение объектов в пространстве']],
                       types.KeyboardButton('<–– Назад к темам стереометрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Перпендикулярность':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Стереометрия']['Перпендикулярность']],
                       types.KeyboardButton('<–– Назад к темам стереометрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Расстояние между объектами':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Стереометрия']['Расстояние между объектами']],
                       types.KeyboardButton('<–– Назад к темам стереометрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Углы между объектами':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Стереометрия']['Углы между объектами']],
                       types.KeyboardButton('<–– Назад к темам стереометрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Сечения':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(*[types.KeyboardButton(s) for s in MATH['Стереометрия']['Сечения']],
                       types.KeyboardButton('<–– Назад к темам стереометрии'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        # case 'Объемы и площади поверхностей фигур':
        # Отправить пикчу

        # Выбор темы в разделе физики
        case 'Механика' | '<–– Назад к темам механики':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton('Кинематика'),
                       types.KeyboardButton('Динамика'),
                       types.KeyboardButton('Статика'),
                       types.KeyboardButton("Законы сохранения в механике"),
                       types.KeyboardButton('Механические колебания и волны'),
                       types.KeyboardButton('<–– Назад к разделам'))
            bot.send_message(message.chat.id, 'Выбери тему', reply_markup=markup)
        case 'Молекулярная физика и термодинамика' | '<–– Назад к темам МКТ и термодинамики':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton('Молекулярная физика'),
                       types.KeyboardButton('Термодинамика'),
                       types.KeyboardButton('<–– Назад к разделам'))
            bot.send_message(message.chat.id, 'Выбери тему', reply_markup=markup)
        case 'Электродинамика' | '<–– Назад к темам Электродинамики':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton('Электрическое поле'),
                       types.KeyboardButton('Законы постоянного тока'),
                       types.KeyboardButton('Магнитное поле'),
                       types.KeyboardButton('Электромагнитная индукция'),
                       types.KeyboardButton('Электромагнитные колебания и волны'),
                       types.KeyboardButton('Оптика'),
                       types.KeyboardButton('<–– Назад к разделам'))
            bot.send_message(message.chat.id, 'Выбери тему', reply_markup=markup)
        case 'Основы специальной теории относительности':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(types.KeyboardButton(
                'Инвариантность модуля скорости света в вакууме. Принцип относительности Эйнштейна'),
                types.KeyboardButton('Энергия свободной частицы. Импульс частицы'),
                types.KeyboardButton('Связь массы и энергии свободной частицы'),
                types.KeyboardButton('Энергия покоя свободной частицы'),
                types.KeyboardButton('<–– Назад к разделам'))
            bot.send_message(message.chat.id, 'Выбери тему', reply_markup=markup)
        case 'Квантовая физика' | '<–– Назад к темам квантовой физики':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton('Корпускулярно-волновой дуализм'),
                       types.KeyboardButton('Физика атома'),
                       types.KeyboardButton('Физика атомного ядра'),
                       types.KeyboardButton('<–– Назад к разделам'))
            bot.send_message(message.chat.id, 'Выбери тему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Механика"
        case 'Кинематика':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Механическое движение. Относительность механического движения. Система отсчёта'),
                types.KeyboardButton('Материальная точка. Её радиус-вектор, траектория, перемещение, путь'),
                types.KeyboardButton('Скорость материальной точки. Перемещение и путь на графике u(t)'),
                types.KeyboardButton('Ускорение материальной точки'),
                types.KeyboardButton('Равномерное прямолинейное движение'),
                types.KeyboardButton('Равноускоренное прямолинейное движение. Путь при равноускоренном движении'),
                types.KeyboardButton('Свободное падение. Движение тела, брошенного под углом к горизонту'),
                types.KeyboardButton(
                    'Движение по окружности. Угловая и линейная скорость. Центростремительное ускорение'),
                types.KeyboardButton('<–– Назад к темам механики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Динамика':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(types.KeyboardButton(
                'Инерциальные системы отсчёта. Первый закон Ньютона. Принцип относительности Галилея'),
                types.KeyboardButton('Масса тела. Плотность вещества'),
                types.KeyboardButton('Сила. Принцип суперпозиции сил'),
                types.KeyboardButton('Второй закон Ньютона'),
                types.KeyboardButton('Третий закон Ньютона'),
                types.KeyboardButton('Закон всемирного тяготения. Сила тяжести. Центр тяжести тела'),
                types.KeyboardButton('Движение небесных тел и их искусственных спутников. Первая космическая скорость'),
                types.KeyboardButton('Вторая космическая скорость'),
                types.KeyboardButton('Сила упругости. Закон Гука'),
                types.KeyboardButton(
                    'Сила трения. Сухое трение. Сила трения скольжения, трения покояю. Коэффициент трения'),
                types.KeyboardButton('Давление'),
                types.KeyboardButton('<–– Назад к темам механики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Статика':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(types.KeyboardButton('Момент силы'),
                       types.KeyboardButton('Центр масс'),
                       types.KeyboardButton('Условия равновесия твёрдого тела в ИСО'),
                       types.KeyboardButton('Закон Паскаля'),
                       types.KeyboardButton('Давление в жидкости'),
                       types.KeyboardButton('Закон Архимеда. Сила Архимеда. Условие плавания тел.'),
                       types.KeyboardButton('<–– Назад к темам механики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Законы сохранения в механике':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(types.KeyboardButton('Импульс материальной точки'),
                       types.KeyboardButton('Импульс системы тел'),
                       types.KeyboardButton('Закон сохранения импульса (ЗСИ)'),
                       types.KeyboardButton('Работа силы'),
                       types.KeyboardButton('Мощность силы'),
                       types.KeyboardButton('Кинетическая энергия'),
                       types.KeyboardButton('Потенциальная энергия'),
                       types.KeyboardButton('Закон сохранения механической энергии (ЗСЭ)'),
                       types.KeyboardButton('<–– Назад к темам механики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Механические колебания и волны':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(types.KeyboardButton('Гармонические колебания. Амплитуда и фаза колебаний'),
                       types.KeyboardButton('Период и частота колебаний. Период малых колебаний'),
                       types.KeyboardButton('Вынужденные колебания. Резонанс. Резонансная кривая'),
                       types.KeyboardButton('Поперечные и продольные волны. Скорость распространения и длина волны'),
                       types.KeyboardButton('Интерференция и дифракция волн'),
                       types.KeyboardButton('Звук. Скорость звука'),
                       types.KeyboardButton('<–– Назад к темам механики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Молекулярная физика и термодинамика"
        case 'Молекулярная физика':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(types.KeyboardButton('Модели строения вещества. Количество вещества'),
                       types.KeyboardButton('Тепловое движение атомов и молекул вещества'),
                       types.KeyboardButton('Взаимодействие частиц вещества'),
                       types.KeyboardButton('Диффузия. Броуновское движение'),
                       types.KeyboardButton('Модель идеального газа в МКТ'),
                       types.KeyboardButton('Основное уравнение МКТ'),
                       types.KeyboardButton('Абсолютная температура'),
                       types.KeyboardButton('Связь температуры газа со средней кинетической энергией молекул'),
                       types.KeyboardButton('Уравнение p = nkT'),
                       types.KeyboardButton('Модель идеального газа в термодинамике. Уравнение Менделеева–Клапейрона'),
                       types.KeyboardButton('Внутренняя энергия идеального одноатомного газа'),
                       types.KeyboardButton('Закон Дальтона для давления смеси разреженных газов'),
                       types.KeyboardButton('Изопроцессы. Объединённый газовый закон'),
                       types.KeyboardButton('Графическое представление изопроцессов на pV-, pT- и VT- диаграммах'),
                       types.KeyboardButton('Насыщенные и ненасыщенные пары'),
                       types.KeyboardButton('Влажность воздуха'),
                       types.KeyboardButton('Испарение и конденсация, кипение жидкости (парообразование)'),
                       types.KeyboardButton('Плавление и кристаллизация'),
                       types.KeyboardButton('Преобразование энергии в фазовых переходах'),
                       types.KeyboardButton('<–– Назад к темам МКТ и термодинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Термодинамика':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Тепловое равновесие и температура'),
                types.KeyboardButton('Внутренняя энергия'),
                types.KeyboardButton('Теплопередача: конвекция, теплопроводность, излучение'),
                types.KeyboardButton('Количество теплоты. Теплоемность. Удельная теплоёмкость вещества'),
                types.KeyboardButton('Удельная теплота парообразования/плавления/сгорания топлива'),
                types.KeyboardButton('Уравнение теплового баланса'),
                types.KeyboardButton('Работа в термодинамике (работа газа)'),
                types.KeyboardButton('Первый закон термодинамики. Адиабата'),
                types.KeyboardButton('Второй закон термодинамики. Необратимые процессы'),
                types.KeyboardButton('Тепловые машины. КПД'),
                types.KeyboardButton('Цикл Карно (максимальное значение КПД)'),
                types.KeyboardButton('<–– Назад к темам МКТ и термодинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Электродинамика"
        case 'Электрическое поле':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Электризация. Электрический заряд. Закон сохранения электрического заряда'),
                types.KeyboardButton('Взаимодействие зарядов. Закон Кулона (Кулоновская сила)'),
                types.KeyboardButton('Электрическое поле'),
                types.KeyboardButton('Напряжённость электрического поля. Поле точечного заряда. Линии напряжённости'),
                types.KeyboardButton(
                    'Потенциал электростатического поля. Потенциальная энергия заряда в электростатическом поле'),
                types.KeyboardButton('Принцип суперпозиции электрических полей'),
                types.KeyboardButton('Проводники в электростатическом поле. Условие равновесия зарядов'),
                types.KeyboardButton('Диэлектрики в электростатическом поле. Диэлектрическая проницаемость вещества ε'),
                types.KeyboardButton('Конденсатор. Электроёмкость конденсатора. Плоский конденсатор'),
                types.KeyboardButton('Параллельное соединение конденсаторов'),
                types.KeyboardButton('Последовательное соединение конденсаторов'),
                types.KeyboardButton('Энергия заряженного конденсатора'),
                types.KeyboardButton('<–– Назад к темам Электродинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Законы постоянного тока':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Сила тока'),
                types.KeyboardButton('Условия существования электрического тока. Напряжение и ЭДС'),
                types.KeyboardButton('Закон Ома для участка цепи'),
                types.KeyboardButton('Электрическое сопротивление'),
                types.KeyboardButton('Источники тока. ЭДС источника тока. Внутреннее сопротивление'),
                types.KeyboardButton('Закон Ома для полной (замкнутой) электрической цепи'),
                types.KeyboardButton('Параллельное и последовательное соединение проводников'),
                types.KeyboardButton('Работа электрического тока. Закон Джоуля – Ленца'),
                types.KeyboardButton('Мощность электрического тока. Тепловая мощность. Мощность источника тока'),
                types.KeyboardButton('Механизмы проводимости в различных веществах. Полупроводники'),
                types.KeyboardButton('<–– Назад к темам Электродинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Магнитное поле':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Механическое взаимодействие магнитов'),
                types.KeyboardButton('Магнитное поле. Вектор магнитной индукции. Принцип суперпозиции магнитных полей'),
                types.KeyboardButton('Линии индукции магнитного поля'),
                types.KeyboardButton('Опыт Эрстеда. Магнитное поле проводника с током'),
                types.KeyboardButton('Сила Ампера'),
                types.KeyboardButton('Сила Лоренца. Движение заряженной частицы в однородном магнитном поле'),
                types.KeyboardButton('<–– Назад к темам Электродинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Электромагнитная индукция':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Поток вектора магнитной индукции'),
                types.KeyboardButton('Явление электромагнитной индукции. ЭДС индукции'),
                types.KeyboardButton('Закон электромагнитной индукции Фарадея'),
                types.KeyboardButton('ЭДС индукции в прямом движущемся проводнике'),
                types.KeyboardButton('Правило Ленца'),
                types.KeyboardButton('Индуктивность. Самоиндукция. ЭДС самоиндукции'),
                types.KeyboardButton('Энергия магнитного поля катушки с током'),
                types.KeyboardButton('<–– Назад к темам Электродинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Электромагнитные колебания и волны':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Колебательный контур. Свободные электромагнитные колебания'),
                types.KeyboardButton(
                    'Формула Томсона (период колебаний в LC цепи). Связь амплитуды заряда конденсатора с амплитудой силы тока'),
                types.KeyboardButton('Закон сохранения энергии в идеальном колебательном контуре'),
                types.KeyboardButton('Вынужденные электромагнитные колебания. Резонанс'),
                types.KeyboardButton('Переменный ток'),
                types.KeyboardButton('Свойства электромагнитных волн'),
                types.KeyboardButton('Шкала электромагнитных волн. Электромагнитные волны в технике и быту'),
                types.KeyboardButton('<–– Назад к темам Электродинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Оптика':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Прямолинейное распространение света в однородной среде'),
                types.KeyboardButton('Законы отражения света'),
                types.KeyboardButton('Построение изображений в плоском зеркале'),
                types.KeyboardButton('Законы преломления света. Показатель преломления'),
                types.KeyboardButton('Полное внутреннее отражение'),
                types.KeyboardButton(
                    'Собирающие и рассеивающие линзы. Фокусное расстояние и оптическая сила тонкой линзы'),
                types.KeyboardButton('Формула тонкой линзы. Линейное увеличение'),
                types.KeyboardButton('Построения в линзах'),
                types.KeyboardButton('Фотоаппарат как оптический прибор. Глаз как оптическая система'),
                types.KeyboardButton('Интерференция света. Когерентные источники. Максимумы и минимумы'),
                types.KeyboardButton('Дифракция света. Дифракционная решётка. Главные максимумы'),
                types.KeyboardButton('Дисперсия света'),
                types.KeyboardButton('<–– Назад к темам Электродинамики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        # Выбор подтемы в теме из раздела "Квантовая физика"
        case 'Корпускулярно-волновой дуализм':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Гипотеза М. Планка о квантах. Формула Планка'),
                types.KeyboardButton('Фотоны. Энергия фотона. Импульс фотона'),
                types.KeyboardButton('Фотоэффект. Опыты А.Г. Столетова. Законы фотоэффекта'),
                types.KeyboardButton('Уравнение Эйнштейна для фотоэффекта'),
                types.KeyboardButton('Волновые свойства частиц. Волны де Бройля. Корпускулярно-волновой дуализм'),
                types.KeyboardButton('Дифракция электронов на кристаллах'),
                types.KeyboardButton('Давление света'),
                types.KeyboardButton('<–– Назад к темам квантовой физики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Физика атома':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Планетарная модель атома'),
                types.KeyboardButton('Постулаты Бора. Переход атома с одного уровня энергии на другой'),
                types.KeyboardButton('Линейчатые спектры. Спектр уровней энергии атома водорода'),
                types.KeyboardButton('Лазер'),
                types.KeyboardButton('<–– Назад к темам квантовой физики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)
        case 'Физика атомного ядра':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            markup.add(
                types.KeyboardButton('Нуклонная модель ядра. Заряд ядра. Массовое число. Изотопы'),
                types.KeyboardButton('Энергия связи нуклонов в ядре. Ядерные силы'),
                types.KeyboardButton('Дефект массы ядра'),
                types.KeyboardButton('Радиоактивность. Альфа и Бетта распады. Гамма излучение'),
                types.KeyboardButton('Закон радиоактивного распада'),
                types.KeyboardButton('Ядерные реакции. Деление и синтез ядер'),
                types.KeyboardButton('<–– Назад к темам квантовой физики'))
            bot.send_message(message.chat.id, 'Выбери подтему', reply_markup=markup)

        case _:
            if message.text in PHOTO.keys():  # Отправка скриншота
                if type(PHOTO[message.text]) in (str, int, float):
                    bot.send_photo(message.chat.id,
                                   open(f'/Users/ivan_tsekhin/PycharmProjects/tg_bot/pics/{PHOTO[message.text]}.png',
                                        'rb'))
                else:
                    for i in PHOTO[message.text]:
                        bot.send_photo(message.chat.id,
                                       open(f'/Users/ivan_tsekhin/PycharmProjects/tg_bot/pics/{i}.png', 'rb'))
            else:  # Поиск по слову/словосочетанию
                arr = []
                for topic in PHOTO.keys():
                    a = 0
                    for word in message.text.split():
                        if len(word) > 6:
                            if word.lower()[:-2] in topic.lower():
                                a += 1
                        else:
                            if word.lower()[:-1] in topic.lower():
                                a += 1
                    if a == len(message.text.split()):
                        arr.append(topic)
                if arr:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                    markup.add(*[types.KeyboardButton(s) for s in arr],
                               types.KeyboardButton('<–– Назад к предметам'))
                    bot.send_message(message.chat.id, 'Что из этого вы искали?', reply_markup=markup)
                elif message.text.lower() == 'мгу топ':  # Пасхалка 1
                    bot.send_sticker(message.chat.id,
                                     open('/Users/ivan_tsekhin/PycharmProjects/tg_bot/pics/sticker.webp', 'rb'))
                elif message.text.lower() == 'ты тупой':  # Пасалка 2
                    bot.send_message(message.chat.id, 'Я знаю больше тебя')
                else:
                    file = open('errors.csv', 'a', buffering=1)
                    file.write(
                        f'{message.from_user.id}, {message.from_user.first_name} {message.from_user.last_name}, {time.asctime()}: {message.text}\n')
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    math = types.KeyboardButton('Математика')
                    phys = types.KeyboardButton('Физика')
                    markup.add(math, phys)
                    bot.send_message(message.chat.id, 'Я не нашел подходящей темы, попробуй спросить по-другому или '
                                                      'поищи нужную тему в меню. \n \n/help – посмотреть функционал '
                                                      'бота. \n/start – начать с начала.', reply_markup=markup)


bot.infinity_polling()
